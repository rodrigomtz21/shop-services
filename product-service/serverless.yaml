service: my-service-shop-app #TIP change this with your own service name

# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3" #TIP verify this version with serverless --version

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2 #TIP this must match with your region
  stage: dev
  #TIP  this is my personal AWS account. This must be skipped in you serverless.yml
  #profile: AWSPractitioner  #RER-DEV #TODO put the root profiles keys as default

plugins:
  - serverless-auto-swagger
  - serverless-webpack

## Lambda functions configuration
functions:  
  getProductsList:
    handler: lambdas/getProductsList.handler
    events:
    - http:
        path: products
        method: get
        responses:
          200:
            description: 'Successful API response'
            bodyType: 'Products'
          500:
            description: 'Failed API response'
            bodyType: 'ErrorResponse'
  getProductsById:
    handler: lambdas/getProductsById.handler
    events:
    - http:
        path: products/{id}
        method: get
        responses:
          200:
            description: 'Successful API response'
            bodyType: 'Product'
          500:
            description: 'Failed API response'
            bodyType: 'ErrorResponse'

custom:
  ## Serverless webpack configuration
  webpack:
    webpackConfig: 'webpack.config.js' # Name of webpack configuration file
    includeModules: false # Node modules configuration for packaging
    packager: 'npm' # Packager that will be used to package your external modules

  ## Serverless openapi configuration
  autoswagger:
    typefiles: [./src/types/product-types.d.ts]